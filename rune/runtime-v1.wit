//! Host functions provided by the proc-block prober.

/// Metadata describing a single node in the Machine Learning pipeline.
record metadata {
    /// The node's name.
    name: string,
    /// The node's version.
    version: string,
    /// A human-friendly description of the node.
    ///
    /// The text may include markdown.
    description: option<string>,
    /// The source repository containing this node.
    repository: option<string>,
    /// An array of strings that describe this package.
    ///
    /// Tags are typically used to assist in search and filtering.
    tags: list<string>,
    /// Arguments this node accepts.
    arguments: list<argument-metadata>,
    /// Information about this node's input tensors.
    inputs: list<tensor-metadata>,
    /// Information about this node's output tensors.
    outputs: list<tensor-metadata>,
}

/// Information about a node's argument.
record argument-metadata {
    /// The argument's name.
    name: string,
    /// A human-friendly description of the argument.
    ///
    /// The text may include markdown.
    description: option<string>,
    /// A useful default value for this argument.
    default-value: option<string>,
    /// A hint about what type this argument may contain.
    type-hint: option<type-hint>,
}

enum type-hint {
    integer,
    float,
    oneline-string,
    multiline-string,
}

/// Information about a tensor.
record tensor-metadata {
    /// The tensor's name.
    name: string,
    /// A human-friendly description of the tensor.
    ///
    /// The text may include markdown.
    description: option<string>,
    /// Hints provided to the runtime to let it reason about this tensor.
    hints: list<tensor-hint>,
}

/// Hints that can be used by the runtime when inspecting a tensor.
resource tensor-hint

/// Hint to the runtime that a tensor may be displayed as an image.
interpret-as-image: function() -> tensor-hint

/// Hint to the runtime that a tensor may be interpreted as an audio clip.
interpret-as-audio: function() -> tensor-hint

/// Hint that a tensor may have a particular shape.
example-shape: function(element-type: element-type, dimensions: dimensions) -> tensor-hint

/// The various types of values a tensor may contain.
enum element-type {
    uint8,
    uintint8,
    uint16,
    uintint16,
    uint32,
    uintint32,
    float32,
    uint64,
    uintint64,
    float64,
}

/// The dimensions that a tensor may have.
variant dimensions {
    /// There can be an arbitrary number of dimensions with arbitrary sizes.
    dynamic,
    /// The tensor has a fixed rank with the provided dimension sizes.
    ///
    /// If a particular dimension's length is zero, that is interpreted as the
    /// dimension being allowed to have any arbitrary length.
    fixed(list<u32>),
}

/// Register a node type with the runtime.
register-node: function(metadata: metadata)
